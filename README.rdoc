== KAPture

A rails application for remote capturing of pictures using GPhoto.


This application runs on any Linux machine, windows not tried yet, and was intended to run on a Beagleboard
for use in a KAP setup (kite aerial photograpy).

If the installation seems a bit difficult, I plan to make available a disk image for the
beagleboard that can be put on a memory card and run directly on a Beagleboard.

=== Functionality

KAPture offera a web interface to the camera. The intenden use is to have th camera and a small linux computer (beagleboard) on a kite. The linux computer has a usb WLAN adapter configured with an adhoc network. On the ground, using a standard phone, you can connect to the adhoc network and capture images using buttons on a web page. Currently KAPture has the following functionality:

* Capture an image
* Capture many images automatically, continuously updating previews
* Download previews and fullsize images
* Automatic conversion of RAW images to JPEG for browsing
* Automatic scaling of images to save bandwidth
* Delete all images on camera
* Delete all images on linux computer
* Change camera settings such as image format (RAW/JPEG/compression), aperture etc. This is still a bit sketchy but works well for many settings. Many times the availability of a setting depends on which mode the camera dial is in.
* Browse images captured during the session

=== Installation

You will need to install the following commands

* git
* dcraw (executable in standard folder /usr/bin)
* cjpeg (executable in standard folder /usr/bin)

Also, the following gems

* RubyInline
* jeweler
* rails
* hoe
* rspec
* will_paginate
* thin
* sqlite3-ruby
* haml


Install any other gems as they are reported missing ;-)

Two gems must be installed from github:

  cd ~
  sudo apt-get install libgphoto2-2-dev
  git clone git://github.com/tallakt/gphoto4ruby.git
  cd gphoto4ruby
  git fetch origin eos_40D_bugs:eos_40D_bugs
  git checkout -b eos_40D_bugs
  sudo rake install

  cd ~
  sudo apt-get install libfreeimage-dev libfreeimage3
  git clone git://github.com/tdd/image_science.git
  cd image_science
  sudo rake install_gem

Clone the project from GitHub

  cd ~
  git clone git://github.com/tallakt/kapture.git
  cd kapture

To generate the production database run the following commands from the

  RAILS_ENV=production rake db:create
  RAILS_ENV=production rake db:migrate


Install the daemon services for thin and kaptured. The kaptured daemon will handle communication with the camera

  rake daemon:install

It will now start with the machine, to start it now type

  sudo /etc/init.d/kaptured
  sudo /etc/init.d/kaptured start

  sudo /etc/init.d/thin
  sudo /etc/init.d/thin start

At this stage, if everything went well, point yout browser to your machine name or ip address and plug in your camera to the USB port.


=== Running in development mode

Running in development mode is simple.

  cd ~/kapture
  rake db:create
  rake db:migrate
  thin start

In a separate window type

  cd ~/kapture
  script/runner lib/kaptured/kaptured.rb run

Log files and pid files should go in the log folder.




